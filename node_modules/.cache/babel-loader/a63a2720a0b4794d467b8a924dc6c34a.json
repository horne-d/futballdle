{"ast":null,"code":"import _toConsumableArray from\"/Users/danielhorne/Desktop/Development/react-wordle/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{Progress}from'./Progress';import{jsx as _jsx}from\"react/jsx-runtime\";export var Histogram=function Histogram(_ref){var gameStats=_ref.gameStats,numberOfGuessesMade=_ref.numberOfGuessesMade;var winDistribution=gameStats.winDistribution;var maxValue=Math.max.apply(Math,_toConsumableArray(winDistribution));return/*#__PURE__*/_jsx(\"div\",{className:\"columns-1 justify-left m-2 text-sm dark:text-white\",children:winDistribution.map(function(value,i){return/*#__PURE__*/_jsx(Progress,{index:i,currentDayStatRow:numberOfGuessesMade===i+1,size:90*(value/maxValue),label:String(value)},i);})});};","map":{"version":3,"sources":["/Users/danielhorne/Desktop/Development/react-wordle/src/components/stats/Histogram.tsx"],"names":["Progress","Histogram","gameStats","numberOfGuessesMade","winDistribution","maxValue","Math","max","map","value","i","String"],"mappings":"iJACA,OAASA,QAAT,KAAyB,YAAzB,C,2CAOA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA+C,IAA5CC,CAAAA,SAA4C,MAA5CA,SAA4C,CAAjCC,mBAAiC,MAAjCA,mBAAiC,CACtE,GAAMC,CAAAA,eAAe,CAAGF,SAAS,CAACE,eAAlC,CACA,GAAMC,CAAAA,QAAQ,CAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,oBAAQF,eAAR,EAArB,CAEA,mBACE,YAAK,SAAS,CAAC,oDAAf,UACGA,eAAe,CAACI,GAAhB,CAAoB,SAACC,KAAD,CAAQC,CAAR,qBACnB,KAAC,QAAD,EAEE,KAAK,CAAEA,CAFT,CAGE,iBAAiB,CAAEP,mBAAmB,GAAKO,CAAC,CAAG,CAHjD,CAIE,IAAI,CAAE,IAAMD,KAAK,CAAGJ,QAAd,CAJR,CAKE,KAAK,CAAEM,MAAM,CAACF,KAAD,CALf,EACOC,CADP,CADmB,EAApB,CADH,EADF,CAaD,CAjBM","sourcesContent":["import { GameStats } from '../../lib/localStorage'\nimport { Progress } from './Progress'\n\ntype Props = {\n  gameStats: GameStats\n  numberOfGuessesMade: number\n}\n\nexport const Histogram = ({ gameStats, numberOfGuessesMade }: Props) => {\n  const winDistribution = gameStats.winDistribution\n  const maxValue = Math.max(...winDistribution)\n\n  return (\n    <div className=\"columns-1 justify-left m-2 text-sm dark:text-white\">\n      {winDistribution.map((value, i) => (\n        <Progress\n          key={i}\n          index={i}\n          currentDayStatRow={numberOfGuessesMade === i + 1}\n          size={90 * (value / maxValue)}\n          label={String(value)}\n        />\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}